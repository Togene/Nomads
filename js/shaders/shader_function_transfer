
		vec3 transform(inout vec3 position, vec3 T, vec4 R, vec3 S){
			//applies the scale
			position *= S;
			
			//compute rotaiton where R is a quaternion
			position += 2.0 * cross(R.xyz, cross(R.xyz, position) + R.w * position);

			//translate that bitch
			position += T;
			
			return position;
		}

        		// http://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/
		vec3 applyQuaternionToVector( vec4 q, vec3 v ){
			return v + 2.0 * cross( q.xyz, cross( q.xyz, v ) + q.w * v );
		}
